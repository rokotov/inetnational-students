<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <import resource="classpath*:/spring/interstudents-service-context.xml"/>
    <import resource="transactionContext.xml"/>

    <context:annotation-config/>

    <bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper" />

    <!--
        SPRING SECURITY SETUP
    -->

    <bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
        <constructor-arg value="secret" />
    </bean>

    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider user-service-ref="userDaoImpl">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <security:http
            realm="Protected API"
            use-expressions="true"
            auto-config="false"
            create-session="stateless"
            entry-point-ref="unauthorizedEntryPoint"
            authentication-manager-ref="authenticationManager">
        <security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
        <security:intercept-url pattern="/rest/user/authenticate" access="permitAll" />

        <security:intercept-url method="GET" pattern="/student/**" access="hasRole('user')" />
        <security:intercept-url method="PUT" pattern="/student/**" access="hasRole('admin')" />
        <security:intercept-url method="POST" pattern="/student/**" access="hasRole('admin')" />
        <security:intercept-url method="DELETE" pattern="/student/**" access="hasRole('admin')" />

        <security:intercept-url method="GET" pattern="/hostel/**" access="hasRole('user')" />
        <security:intercept-url method="PUT" pattern="/hostel/**" access="hasRole('admin')" />
        <security:intercept-url method="POST" pattern="/hostel/**" access="hasRole('admin')" />
        <security:intercept-url method="DELETE" pattern="/hostel/**" access="hasRole('admin')" />
    </security:http>

    <bean id="unauthorizedEntryPoint" class="kotov.interstudents.auth.UnauthorizedEntryPoint" />

    <bean class="kotov.interstudents.auth.AuthenticationTokenProcessingFilter" id="authenticationTokenProcessingFilter">
        <constructor-arg ref="userDaoImpl" />
    </bean>
</beans>